// dont stop at station if bus is full and no one wants to get off the bus
gar G forall bus in Int(0..(NUM_BUSSES - 1)). (isBusFull[bus] & !isStopPressed[bus]) -> next(stopAtNextStation[bus])=false;


gar GF forall reserveBus in Int (2..2). !inUse[reserveBus];

gar G unstoppedStationsLineA = MAX_UNSTOPPED_STATIONS -> next(needExtraBusForLine[A]) = true;


counter unstoppedStationsLineA (0..MAX_UNSTOPPED_STATIONS){
	unstoppedStationsLineA = 0;
	inc: atStationAndPassengersDidNotHaveSeats(0) | (lineOfBus[2]=A & atStationAndPassengersDidNotHaveSeats(2));
	//inc: atStationAndPassengersDidNotHaveSeats(0) | (atStationAndPassengersDidNotHaveSeats(2) & lineOfBus[2]=A) | (atStationAndPassengersDidNotHaveSeats(3) & lineOfBus[3]=A);
	reset: extraBusSentLine[A];
	overflow: keep;
}


gar G unstoppedStationsLineB = MAX_UNSTOPPED_STATIONS -> next(needExtraBusForLine[B]) = true;


counter unstoppedStationsLineB (0..MAX_UNSTOPPED_STATIONS){
	unstoppedStationsLineB = 0;
	inc: atStationAndPassengersDidNotHaveSeats(1) | (atStationAndPassengersDidNotHaveSeats(2) & lineOfBus[2]=B);
	//inc: atStationAndPassengersDidNotHaveSeats(1) | (atStationAndPassengersDidNotHaveSeats(2) & lineOfBus[2]=B) | (atStationAndPassengersDidNotHaveSeats(3) & lineOfBus[3]=B);
	reset: extraBusSentLine[A];
	overflow: keep;
}


// Guarantee for each line: if extra bus is needed for the this line, go through the reserve busses, if it's free allocate it to this line
// TODO: think how to make sure that not both busses will turn to be in use in case there is only one line which need extra bus.
// TODO: check how spectra works when inUse gets updated - in the middle of the loop or only at the end? (in order to make sure multiple busses will not allocate the same bus)
gar G forall line in Int(0..(NUM_LINES - 1)). forall reserveBus in Int (2..2). (atMainStation[reserveBus] & !inUse[reserveBus] & needExtraBusForLine[line] ) -> (next(inUse[reserveBus]) = true & lineOfBus[reserveBus] = line );