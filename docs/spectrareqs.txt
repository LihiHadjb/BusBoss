Guarantees:
-----------
- If it is raining, than the bus should wait 2 steps in each station it stops at in order to help passengers get settled.
- Add a guarantee that the system will not change a bus's line in the middle of a route.
- Add a guarantee that there is always at least one bus in each line
- Add a guarantee that if the bus stopped at MAX_STATIONS_TO_GAS_STATION, than the bus shouldGoToGasStationBus will be true.
- Add a guarantee that if the bus should go to the gas station, than the bus must go to the gas station and will not be in service (doesn't stop for passengers on it's way).
- Add a guarantee that sends one of the available busses when needed.
- Add initial guarantees
  - Guarantee for each bus: at the beginning, the bus is at main station and shouldn't go to gas station.
  - Guarantee for each reserve bus: at the beginning, they are not in use.
  - Guarantee for each bus which isn't reserve bus: at the beginning, they are in use.
  - Guarantee for bus0: at the beginning, the bus is allocated to line A.
  - Guarantee for bus1: at the beginning, the bus is allocated to line B.
- Add guarantee for each bus: if atDestinantionStation and shouldn't go to gas station(!), set new destination to be next station of line route and origin to be old destination. 
- Add a guarantee for each station: if a bus at destinationStation and should go to gas station, set new destination to be next station 
  of from_destination_Station_to_gas_station route and origin to be old destination.
- Add a guarantee for each bus: if the bus should go to gas station and the bus is at gas station, set shouldGoToGasStation to false and go back to main station.
- Add a guarantee for each bus: as long as the bus is in use and in the middle of a round (i.e not in main station which represents finishing of a full round), don't change the bus's line
- Add a guarantee for each bus: while a the bus is on it's way to the gas station (meaning shouldGoToGasStation = true), it shouldn't stop (meaning stopAtNextStation = false);
- Add a guarantee for each bus: if numOfStopsPassedBus = MAX_STATIONS_TO_GAS_STATION, then the bus shouldGoToGasStation
- Add a guarantee for each line: there is always at least one bus for each line
- Add a guarantee for each reserve bus: after X steps the reserve bus returns to the main station and to be !inUse
- Add a guarantee for each bus: if unstoppedStationsBus counter = MAX_UNSTOPPED_STATIONS, try to get extra bus
- Add a guarantee for each line: if extra bus is needed for the this line, go through the reserve busses, if it's free allocate it to this line
	- Think how to make sure that not both busses will turn to be in use in case there is only one line which need extra bus.
	- Check how spectra works when inUse gets updated - in the middle of the loop or only at the end? (in order to make sure multiple busses will not allocate the same bus)
- Add a guarantee for each reserve bus: if there are free busses and some line needs extra bus, one of them should turn to be in use
- Add a guarantee for each line: if an extra bus was sent to this line, needExtraBusForLine = false


Assumptions:
-----------
- Add an assumption for each station: If there are people waiting at a station and the bus didn't stop, than in next there will still be people waiting.
- Add an assumption for each bus: if the bus was not full, and the bus did not stop at some station, than it remains not full.
- Add an assumption for each bus - if some bus needs to wait at current station and not at destination station yet, next(atDestinationStation) = atDestinationStation

